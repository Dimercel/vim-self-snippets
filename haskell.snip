snippet foldl
    foldl (\acc x -> x : acc) [] [1, 2, 3, 4]

snippet foldr
    foldr (\x acc -> x : acc) [] [1, 2, 3, 4]

snippet functor_laws
    fmap id x = id x
    (f . g) x = fmap f(fmap g x)

snippet applicative_laws
    pure id <*> v = v
    pure f <*> pure x = pure (f x)
    u <*> pure y = pure ($ y) <*> u
    u <*> (v <*> w) = pure (.) <*> u <*> v <*> w

snippet monad_laws
    return a >>= k  =  k a
    m >>= return    =  m
    m >>= (\x -> k x >>= h) = (m >>= k) >>= h
